aiscalator {
    since_version = 0.1.0
    created_on = generation_date

    timezone = Europe/Paris

    logging {
        version = 1
        disable_existing_loggers = False

        formatters {
            simple.format: "%(asctime)s-%(threadName)s-%(name)s-%(levelname)s-%(message)s"
        }

        handlers {
            console {
                class = logging.StreamHandler
                level = DEBUG
                formatter = simple
                stream = ext://sys.stderr
            }

            info_file_handler {
                class = logging.handlers.RotatingFileHandler
                level = INFO
                formatter = simple
                filename = ${HOME}/.aiscalator/logs/info.log
                maxBytes =  10485760 # 10MB
                backupCount = 20
                encoding = utf8
            }

            error_file_handler {
                class = logging.handlers.RotatingFileHandler
                level = ERROR
                formatter = simple
                filename = ${HOME}/.aiscalator/logs/errors.log
                maxBytes =  10485760 # 10MB
                backupCount = 20
                encoding = utf8
            }
        }

        loggers {
            aiscalator {
                level = DEBUG
                handlers = [ console ]
                propagate = no
            }
        }

        root {
            level = INFO
            handlers = [console, info_file_handler, error_file_handler]
        }
    }

    jupyter {
        dockerfile_src = ${HOME}/.aiscalator/docker

        docker_image {
            allow_apt_packages = True
            allow_requirements = True
            allow_lab_extensions = True
        }
    }

    user {
        id = testUserID
    }
}
