aiscalator.version             = 0.1.14
// Note that all fields ending by '_path' refer to relative
// paths from the location of this configuration file

// An Aiscalator is a collection of steps to run...
// Here we define all possible steps to execute
steps {
    examples {

//******************************************************
//* 1st example based on official papermill tutorial   *
//******************************************************
        papermill {
            // Aiscalator's Metadata for this particular step
            metadata {
                description = """
This notebook is the example from the papermill tutorial from nteract:
https://github.com/nteract/papermill/tree/master/binder
"""
                tags = [
                    example
                    papermill
                ]
            }
            // Static Configuration of the Docker Image to build
            // (list of needed software, packages and misc config)
            docker_image {
                input_docker_src = jupyter-spark

                // additional add-apt-repository (fully editable)
                //apt_repository_path   = apt_repository.txt

                // additional apt-get package file (fully editable)
                //apt_package_path   = apt_packages.txt

                // additional pip requirements file (fully editable)
                requirements_path  = requirements.txt

                // additional jupyter lab extension file (fully editable)
                //lab_extension_path = lab_extensions.txt

                // how to name the produced docker image
                output_docker_name = aiscalator/example
                output_docker_tag_commit_hash = False
                //output_docker_tag  = v0.1.0
            }
            // Code to run as part of this step with parameters
            task {
                type = jupyter
                code_path = steps/papermill_step.py
                execution_dir_path = build/step/
                parameters = [
                    { start_date = 2011-01-01 }
                    { stop_date = 2014-02-02 }
                ]
                input_data_path = [ ]
                output_data_path = [ ]
                modules_src_path = [ ]
            }
        } // end of papermill

//******************************************************
//* 2nd example with a slightly more advanced pipeline *
//******************************************************
        advanced_papermill {
            // here, we define a more advanced example, but
            // we are re-using the same fields as the first
            // example:
            step1 = ${steps.examples.papermill}
            // then, we overide and customize fields as needed
            step1 {
                metadata.description = """
    This notebook is a more advanced example.
    (configuration is based on the first papermill example)

    Step1 is in charge of retrieving data (generating mock data)
    for the current day (or data from previous day).
    It should be run on a schedule once a day. (ETL step)
                                       """
                task {
                    code_path = adv_steps/papermill_step1.py
                    execution_dir_path = build/adv_step/
                    parameters = [
                        { run_date = 2011-01-01 }
                    ]
                    input_data_path = [ ]
                    output_data_path = [ ${data.step1} ]
                }
            } // end of step1

            step2 = ${steps.examples.advanced_papermill.step1}
            step2 {
                metadata.description = """
    This notebook is a more advanced example.
    (configuration is based on the first papermill example)

    Step2 builds some very complex (or not) model and output
    some (bad) prediction data for the future. (modelling step)
                                       """
                task {
                    code_path = adv_steps/papermill_step2.py
                    input_data_path = [ ${data.step1} ]
                    output_data_path = [ ${data.step2} ]
                }
            } // end of step2

            step3 = ${steps.examples.advanced_papermill.step1}
            step3 {
                metadata.description = """
    This notebook is a more advanced example.
    (configuration is based on the first papermill example)

    Step3 builds on top of previous steps and presents the
    resulting data in a graph to be quickly digested by
    interested parties. (presentation step)
                                       """
                task {
                    code_path = adv_steps/papermill_step3.py
                    input_data_path = [ 
                        ${data.step1}
                        ${data.step2} 
                    ]
                    output_data_path = [ ]
                }
            } // end of step2

        } // end of advanced_papermill

    } // end of examples
} // end of steps

dags {
    examples {
        airflow.definition.code_path = airflow_tutorial/airflow_tutorial.py
        papermill.definition.code_path = dags/papermill_dag.py
        advanced_papermill.definition.code_path = adv_dags/papermill_dag.py
    }
} // end of dags

// import some definitions of the environment that will change how we handle data
include "env.conf"
data {
    output_dir = ${data.source}"build/data"
    step1 = {step1 = ${data.output_dir}"/step1"}
    step2 = {step2 = ${data.output_dir}"/step2"}
}
